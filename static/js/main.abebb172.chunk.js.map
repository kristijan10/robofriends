{"version":3,"sources":["components/Card.js","components/CardList.js","components/ErrorBoundry.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","key","src","concat","alt","style","maxWidth","maxHeight","CardList","robots","map","_ref2","src_components_Card","ErrorBoundry","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","children","Component","Scroll","overflowY","height","border","SearchBox","searchChange","type","placeholder","onChange","margin","padding","App","onSearchChange","e","searchfield","target","value","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","display","flexDirection","justifyContent","alignItems","components_SearchBox","components_Scroll","components_ErrorBoundry","src_components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.abebb172.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className=\"card\" key={id}>\n      <img\n        src={`https://robohash.org/random${id}`}\n        alt=\"robots\"\n        style={{ maxWidth: \"200px\", maxHeight: \"200px\" }}\n      />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport \"./CardList.css\";\n\nconst CardList = ({ robots }) => {\n\treturn (\n\t\t<div className=\"card-list\">\n\t\t\t{robots.map(({ id, name, email }) => (\n\t\t\t\t<Card id={id} name={name} email={email} key={id} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default CardList;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false,\n\t\t};\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({ hasError: true });\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) return <p>Dogodila se greska</p>;\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundry;\n","import React from \"react\";\n\nconst Scroll = ({ children }) => {\n  return (\n    <div style={{ overflowY: \"scroll\", height: \"500px\", border: \"2px solid\" }}>\n      {children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <input\n      type={\"text\"}\n      placeholder={\"Search\"}\n      onChange={searchChange}\n      style={{ margin: \"1rem\", padding: \".5rem\" }}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport Scroll from \"../components/Scroll\";\nimport SearchBox from \"../components/SearchBox\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: \"\",\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((users) => this.setState({ robots: users }));\n\t}\n\n\tonSearchChange = (e) => {\n\t\tthis.setState({ searchfield: e.target.value });\n\t};\n\n\trender() {\n\t\tconst filteredRobots = this.state.robots.filter((robot) => {\n\t\t\treturn robot.name\n\t\t\t\t.toLowerCase()\n\t\t\t\t.includes(this.state.searchfield.toLowerCase());\n\t\t});\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<h1>ROBOFRIENDS</h1>\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\n\t\t\t\t</header>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./containers/App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}